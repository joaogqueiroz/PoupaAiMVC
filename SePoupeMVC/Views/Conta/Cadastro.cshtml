@model SePoupeMVC.Models.Conta.CadastroContaModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Login</title>
    <!--CSS FILES HERE USING LINK TAG-->
    <link href="~/css/bootstrap.css" rel="stylesheet" />
</head>
<body class="bg-dark text-white">
    <div class="mt-5 col-md-4 offset-md-4">
        <div class="card bg-secondary">
            <div class="card-body text-center rounded-0">
                <h5>Registration</h5>
                <hr />

                @if (TempData["Message"] != null)
                {
                    <div class="alert alert-secondary alert-dismissible fade show" role="alert">
                        <strong>@TempData["Message"]</strong>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
                @using (Html.BeginForm("Cadastro", "Conta", FormMethod.Post, new { @autocomplete = "off" }))
                {
                    <label>Nome</label>
                    @Html.TextBoxFor(model => model.Nome, new { @class = "form-control" })
                    <span class="text-danger">
                        @Html.ValidationMessageFor(model => model.Nome)
                    </span>
                    <br />

                    <label>Email</label>
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    <span class="text-danger">
                        @Html.ValidationMessageFor(model => model.Email)
                    </span>
                    <br />

                    <label>CPF</label>
                    @Html.TextBoxFor(model => model.CPF, new { @class = "form-control" })
                    <span class="text-danger">
                        @Html.ValidationMessageFor(model => model.CPF)
                    </span>
                    <br />

                    <label>Data de nascimento</label>
                    @Html.TextBoxFor(model => model.Nascimento, new { @class = "form-control", @type = "date", @style = "text-align:left" })
                    <span class="text-danger">
                        @Html.ValidationMessageFor(model => model.Nascimento)
                    </span>
                    <br />

                    <label>Sexo</label>
                    @Html.DropDownListFor(model => model.Sexo, Html.GetEnumSelectList(typeof(SePoupeMVC.Models.Conta.Sexo))
                             , new { @class = "form-select" })
                    <span class="text-danger">
                        @Html.ValidationMessageFor(model => model.Sexo)
                    </span>
                    <br />


                    <label>Senha</label>
                    @Html.PasswordFor(model => model.Senha, new { @class = "form-control" })
                    <span class="text-danger">
                        @Html.ValidationMessageFor(model => model.Senha)
                    </span>
                    <br />

                    <label>Confirme sua senha</label>
                    @Html.PasswordFor(model => model.ConfirmacaoSenha, new { @class = "form-control" })
                    <span class="text-danger">
                        @Html.ValidationMessageFor(model => model.ConfirmacaoSenha)
                    </span>

                    <br />

                    <div class="d-grid">
                        <input type="submit" class="btn btn-dark" value="Register" />
                        <br />
                        <a href="/Conta/Login" class="btn btn-light">Login</a>
                    </div>
                }
            </div>
        </div>
    </div>

    <!--JS FILES HERE USING SCRIPT TAG-->
    <script src="~/js/bootstrap.js"></script>
</body>
</html>